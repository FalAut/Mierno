name: Create Modpack Release

on:
    workflow_dispatch:
        inputs:
            ref:
                description: "Mierno repository reference (branch/tag)"
                default: "main"
                required: true

jobs:
    create-release:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout main branch
              uses: actions/checkout@v4
              with:
                  fetch-depth: 2
                  ref: ${{ github.event.inputs.ref }}
                  path: main_repo

            - name: Checkout server_pack branch
              uses: actions/checkout@v4
              with:
                  ref: server_pack
                  path: server_pack_dir

            - name: Set up environment and determine version
              id: setup
              run: |
                  # 切换到 main_repo 目录
                  cd main_repo

                  # 打印仓库结构以进行调试
                  echo "Debugging repository structure for main_repo:"
                  ls -R || { echo "Failed to list repository structure in main_repo"; exit 1; }

                  # 检查 CHANGELOG.md 是否存在
                  CHANGELOG_PATH="./CHANGELOG.md"
                  if [ ! -f "$CHANGELOG_PATH" ]; then
                      echo "Error: $CHANGELOG_PATH not found in main_repo."
                      exit 1
                  fi

                  # 打印 CHANGELOG.md 内容以进行调试
                  echo "Debugging CHANGELOG.md content in main_repo:"
                  cat "$CHANGELOG_PATH" || { echo "Failed to read $CHANGELOG_PATH"; exit 1; }

                  # 从 CHANGELOG.md 中提取最新版本号
                  LATEST_VERSION=$(grep -oP '^## v\K[0-9]+(\.[0-9]+)*' "$CHANGELOG_PATH" | head -n1)

                  if [ -z "$LATEST_VERSION" ]; then
                      echo "Error: Failed to extract version from $CHANGELOG_PATH. Ensure it contains a line starting with '## v' followed by a version number."
                      exit 1
                  fi

                  echo "Extracted version: $LATEST_VERSION"
                  echo "VERSION=$LATEST_VERSION" >> $GITHUB_OUTPUT
                  echo "ZIP_NAME=Mierno-$LATEST_VERSION.zip" >> $GITHUB_OUTPUT
                  echo "SERVER_ZIP_NAME=Mierno-$LATEST_VERSION-server.zip" >> $GITHUB_OUTPUT

            - name: Debug outputs
              run: |
                  echo "VERSION is ${{ steps.setup.outputs.VERSION }}"
                  echo "ZIP_NAME is ${{ steps.setup.outputs.ZIP_NAME }}"
                  echo "SERVER_ZIP_NAME is ${{ steps.setup.outputs.SERVER_ZIP_NAME }}"

            - name: Update manifest.json version
              run: |
                  cd main_repo
                  sed -i '/"name": *"Mierno",/!b;n;s/"version": *"[^"]*"/"version": "${{ steps.setup.outputs.VERSION }}"/' manifest.json
                  echo "Updated manifest.json with version ${{ steps.setup.outputs.VERSION }}"

            - name: Create and package modpack
              run: |
                  cd main_repo
                  mkdir overrides
                  cp -r config defaultconfigs hotai kubejs ldlib overrides/
                  zip -r "../${{ steps.setup.outputs.ZIP_NAME }}" overrides manifest.json modlist.html

            - name: Create and package server pack
              run: |
                  # 切换到 server_pack_dir 目录
                  cd server_pack_dir

                  # 打印服务端仓库结构以进行调试
                  echo "Debugging repository structure for server_pack_dir:"
                  ls -R || { echo "Failed to list repository structure in server_pack_dir"; exit 1; }

                  # 确保不包含 README.md 和 .gitignore
                  rm -f README.md .gitignore

                  # 打包服务端
                  zip -r "../${{ steps.setup.outputs.SERVER_ZIP_NAME }}" ./*

            - name: Extract CHANGELOG for current version
              run: |
                  cd main_repo
                  sed -n "/^## v${{ steps.setup.outputs.VERSION }}/,/^## /p" CHANGELOG.md | sed '$d' > ../extracted_changelog.txt

            - name: Create GitHub Release
              id: create_release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: "v${{ steps.setup.outputs.VERSION }}"
                  release_name: "Mierno v${{ steps.setup.outputs.VERSION }}"
                  body_path: extracted_changelog.txt
                  draft: false
                  prerelease: false

            - name: Upload Modpack ZIP
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./${{ steps.setup.outputs.ZIP_NAME }}
                  asset_name: ${{ steps.setup.outputs.ZIP_NAME }}
                  asset_content_type: application/zip

            - name: Upload Server Pack ZIP
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./${{ steps.setup.outputs.SERVER_ZIP_NAME }}
                  asset_name: ${{ steps.setup.outputs.SERVER_ZIP_NAME }}
                  asset_content_type: application/zip

            - name: Additional Debugging
              run: |
                  echo "Final extracted changelog:"
                  cat extracted_changelog.txt
